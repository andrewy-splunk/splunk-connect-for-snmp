---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sc4-snmp-traps
  labels:
    app: sc4-snmp-traps
    # environment: production
    # tier: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sc4-snmp-traps
      # environment: production
      # tier: frontend
  template:
    metadata:
      labels:
        app: sc4-snmp-traps
        # environment: production
        # tier: frontend
    spec:
      containers:
        - name: traps
          image: ghcr.io/splunk/splunk-connect-for-snmp-traps:c15658cd37de626f69956b103d7a4d1c9359cd63
          args: ["--loglevel=DEBUG", "--config=/work/config.yaml", "--index=snmp"]
          ports:
            - containerPort: 2162
          env:
            - name: MIBS_SERVER_URL
              value: http://$(MIB_SERVER_SERVICE_SERVICE_HOST):$(MIB_SERVER_SERVICE_SERVICE_PORT)
            - name: SPLUNK_HEC_URL
              valueFrom:
                secretKeyRef:
                  name: remote-splunk
                  key: SPLUNK_HEC_URL
            - name: SPLUNK_HEC_TOKEN
              valueFrom:
                secretKeyRef:
                  name: remote-splunk
                  key: SPLUNK_HEC_TOKEN
            - name: SPLUNK_HEC_TLS_VERIFY
              valueFrom:
                secretKeyRef:
                  name: remote-splunk
                  key: SPLUNK_HEC_TLS_VERIFY
          # volumeMounts:
          #   - name: config
          #     mountPath: "/work/config"
          #     readOnly: true
      imagePullSecrets:
        - name: regcred
      # volumes:
      #   # You set volumes at the Pod level, then mount them into containers inside that Pod
      #   - name: config
      #     configMap:
      #       # Provide the name of the ConfigMap you want to mount.
      #       name: sc4snmp
      #       # An array of keys from the ConfigMap to create as files
      #       items:
      #         - key: "config.yaml"
      #           path: "config.yaml"
---

